R"==~~~~==(bytes.strip~~CPP==map==key==delim~~
"bytes.strip"
bytes.strip([chars]), bytearray.strip([chars])
   Return a copy of the sequence with specified leading and trailing
   bytes removed. The *chars* argument is a binary sequence specifying
   the set of byte values to be removed - the name refers to the fact
   this method is usually used with ASCII characters.  If omitted or
   "None", the *chars* argument defaults to removing ASCII whitespace.
   The *chars* argument is not a prefix or suffix; rather, all
   combinations of its values are stripped:

      >>> b'   spacious   '.strip()
      b'spacious'
      >>> b'www.example.com'.strip(b'cmowz.')
      b'example'

   The binary sequence of byte values to remove may be any *bytes-like
   object*.

   Note: The bytearray version of this method does *not* operate in
     place - it always produces a new object, even if no changes were
     made.

    The following methods on bytes and bytearray objects assume the use of
    ASCII compatible binary formats and should not be applied to arbitrary
    binary data. Note that all of the bytearray methods in this section do
    *not* operate in place, and instead produce new objects.

~~CPP==new==module==delim~~
)==~~~~=="
