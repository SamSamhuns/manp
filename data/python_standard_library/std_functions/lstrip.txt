R"==~~~~==(lstrip~~CPP==map==key==delim~~
"lstrip"
\033[32;1mstr.lstrip([chars])\033[0m
   Return a copy of the string with leading characters removed.  The
   *chars* argument is a string specifying the set of characters to be
   removed.  If omitted or "None", the *chars* argument defaults to
   removing whitespace.  The *chars* argument is not a prefix; rather,
   all combinations of its values are stripped:

      >>> '   spacious   '.lstrip()
      'spacious   '
      >>> 'www.example.com'.lstrip('cmowz.')
      'example.com'

\033[32;1mbytes.lstrip([chars]), bytearray.lstrip([chars])\033[0m
   Return a copy of the sequence with specified leading bytes removed.
   The *chars* argument is a binary sequence specifying the set of
   byte values to be removed - the name refers to the fact this method
   is usually used with ASCII characters.  If omitted or "None", the
   *chars* argument defaults to removing ASCII whitespace.  The
   *chars* argument is not a prefix; rather, all combinations of its
   values are stripped:

      >>> b'   spacious   '.lstrip()
      b'spacious   '
      >>> b'www.example.com'.lstrip(b'cmowz.')
      b'example.com'

   The binary sequence of byte values to remove may be any *bytes-like
   object*.

   Note: The bytearray version of this method does *not* operate in
     place - it always produces a new object, even if no changes were
     made.

~~CPP==new==module==delim~~
)==~~~~=="
